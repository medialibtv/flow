`2.3.12 (2016-03-16) <https://github.com/neos/flow-development-collection/releases/tag/2.3.12>`_
================================================================================================

Overview of merged pull requests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

`BUGFIX: Log throwable errors in PHP 7 <https://github.com/neos/flow-development-collection/pull/303>`_
-------------------------------------------------------------------------------------------------------

Throwable errors (``TypeError``, ``ParseError``, ..) introduced in PHP 7.0
are not logged in the system log. Which means these errors can only
be shown using the debug exception handler.

To fix this a new logger interface ``ThrowableLoggerInterface``
that extends the existing ``LoggerInface`` is introduced,
which adds supports throwables in addition to exceptions.

To support PHP7 in custom logger interfaces, the new interface needs
to be implemented. Otherwise throwables won't get logged.

FLOW-441 #close

* Packages: ``Flow``

`TASK: Memcached cache backend compatibility with memcached <https://github.com/neos/flow-development-collection/pull/296>`_
----------------------------------------------------------------------------------------------------------------------------

Adds support for the "memcached" extension in addition to the existing
support for the "memcache" extension.

"memcached" is a newer version with several improvements and often both
extensions aren't available simultaneously.

FLOW-440 #close

* Packages: ``Flow``

`BUGFIX: Avoid warning on empty controller class <https://github.com/neos/flow-development-collection/pull/260>`_
-----------------------------------------------------------------------------------------------------------------

* Packages: ``Flow``

`BUGFIX: All rst errors and warnings <https://github.com/neos/flow-development-collection/pull/265>`_
-----------------------------------------------------------------------------------------------------

As the used syntax was invalid to sphinx, and `'` are recommended in
yaml anyway.

* Packages: ``Flow``

`BUGFIX: Correct error message in package:create command <https://github.com/neos/flow-development-collection/pull/257>`_
-------------------------------------------------------------------------------------------------------------------------

$packageType is used in the error message if is is not a valid Flow package
type.

* Packages: ``Flow``

`Revert "TASK: Exclude classes pulled in by doctrine/migrations 1.3" <https://github.com/neos/flow-development-collection/pull/253>`_
-------------------------------------------------------------------------------------------------------------------------------------

Reverts neos/flow-development-collection#251

Flow 2.3 still runs on PHP 5.3 but doctrine/migrations 1.3 requires at least 5.5, therefore
we need to revert this requirement to make Flow 2.3 work smoothly with PHP 5.3.

* Packages: ``Flow``

`TASK: Exclude classes pulled in by doctrine/migrations 1.3 <https://github.com/neos/flow-development-collection/pull/251>`_
----------------------------------------------------------------------------------------------------------------------------

Pulling in doctrine/migrations 1.3 works fine, but it comes with some
new dependencies that need to be excluded from reflection.

* Packages: ``Flow``

`BUGFIX: Adjust index names to match Doctrine DBAL 2.5 <https://github.com/neos/flow-development-collection/pull/250>`_
-----------------------------------------------------------------------------------------------------------------------

The use of Doctrine 2.5 (instead of 2.4) exposes the fact that some
(old) index names in the Flow database schema do not match the names
that are generated currently.

This adjusts those index names, something that is a one-time adjustment.

FLOW-427 #close Adjusts indexes as needed
FLOW-222 #close Adjusts indexes as needed

* Packages: ``Flow``

`BUGFIX: Fix session garbageCollector probability of 0 <https://github.com/neos/flow-development-collection/pull/247>`_
-----------------------------------------------------------------------------------------------------------------------

I would expect a session garbageCollection.probability of zero would never
trigger garbage collection.

Previously it actually did with a probability 1 / 101 as a it results in the
equation rand(0, 100) <= 0.

* Packages: ``Flow``

`BUGFIX: Fix two small formatting issues in docs <https://github.com/neos/flow-development-collection/pull/249>`_
-----------------------------------------------------------------------------------------------------------------

The dot was one to much, and the link didn't render because of formatting
issue.

Beside that, `EssentialDesignPatterns.rst` was not posix conform as the last
line was missing new line character. Some leftover "TYPO Flow" uses have
been removed as well.

* Packages: ``Flow``

`TASK: Rename "TYPO3 Flow" to "Flow" and update URLs <https://github.com/neos/flow-development-collection/pull/244>`_
---------------------------------------------------------------------------------------------------------------------

* Packages: ``Flow``

`TASK: Explain relation to package default files <https://github.com/neos/flow-development-collection/pull/245>`_
-----------------------------------------------------------------------------------------------------------------

* Packages: ``Flow``

`TASK: Fix comment on Flow.session.name setting <https://github.com/neos/flow-development-collection/pull/243>`_
----------------------------------------------------------------------------------------------------------------

Leaving the name empty will not work as advertised.

* Packages: ``Flow``

`BUGFIX: Value objects can be property mapped when submitted by identifier only <https://github.com/neos/flow-development-collection/pull/205>`_
------------------------------------------------------------------------------------------------------------------------------------------------

The identifier is unset from the submitted properties for Value Objects, because
they should use constructor arguments to be reconstituted. However, in forms
value objects are currently submitted by identifier, which will make property
mapping fail with an error.

This change fixes that by only unsetting the identifier if there are other
properties submitted.

* Packages: ``Flow``

`TASK: RsaWalletService tweaks <https://github.com/neos/flow-development-collection/pull/229>`_
-----------------------------------------------------------------------------------------------

Improves naming and documentation in RsaWalletService and the related command controller.

* Packages: ``Flow``

`BUGFIX: Initialize Bootstrap::requestHandlers with empty array <https://github.com/neos/flow-development-collection/pull/232>`_
--------------------------------------------------------------------------------------------------------------------------------

The ``requestHandlers`` property of the Bootstrap is used as an
array but is never initialized. For sake of cleanliness it should be.

* Packages: ``Flow``

`BUGFIX: Allow composite keys over foreign entities <https://github.com/neos/flow-development-collection/pull/154>`_
--------------------------------------------------------------------------------------------------------------------

Currently, the implementation of the FlowAnnotationDriver prevents
composite primary keys including an foreign entity reference to
work, as in the example of doctrine:
http://docs.doctrine-project.org/en/latest/tutorials/composite-primary-keys.html#identity-through-foreign-entities

This change adds the required mapping informations, which is only
a first step towards full composite key support.

FLOW-259 #close

* Packages: ``Flow``

`BUGFIX: Make withoutAuthorizationChecks example realistic <https://github.com/neos/flow-development-collection/pull/223>`_
---------------------------------------------------------------------------------------------------------------------------

The example for usage of ``withoutAuthorizationChecks`` in the docblock
is wrong in as it shows variables used inside the closure as closure
arguments but that is impossible. Instead they must be added to the
closure context via ``use``.

* Packages: ``Flow``

`BUGFIX: Resolve type in UniqueEntityValidator <https://github.com/neos/flow-development-collection/pull/220>`_
---------------------------------------------------------------------------------------------------------------

Run the given validator value through TypeHandling::getTypeForValue()
to make sure doctrine proxies are resolved to the actual domain
model type.

* Resolves: `FLOW-433 <https://jira.neos.io/browse/FLOW-433>`_
* Packages: ``Flow``

`Detailed log <https://github.com/neos/flow-development-collection/compare/2.3.11...2.3.12>`_
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
